from matplotlib import pyplot as pltimport backprop_dataimport backprop_networkimport numpy as npdef section_b():    epochs = 30    number_of_plots = 7    learn_rates = np.logspace(-3, 3, number_of_plots)    x = np.arange(epochs)    training_data, test_data = backprop_data.load(train_size=10000, test_size=5000)    net = backprop_network.Network([784, 40, 10])    training_acc = []    training_loss = []    test_acc = []    for rate in learn_rates:        training_acc_sgd, training_loss_sgd, test_acc_sgd = \            net.SGD(training_data, epochs=epochs, mini_batch_size=10, learning_rate=rate, test_data=test_data)        training_acc.append(training_acc_sgd)        training_loss.append(training_loss_sgd)        test_acc.append(test_acc_sgd)    graph_lst = [training_acc, test_acc, training_loss]    titles = ['training accuracy', 'test accuracy', 'training loss']    number_of_graphs = 3    for i in range(number_of_graphs):        for j in range(number_of_plots):            plt.plot(x, graph_lst[i][j], label=str(learn_rates[j]))        plt.title(titles[i])        plt.legend()        plt.show()def section_c():    training_data, test_data = backprop_data.load(train_size=50000, test_size=10000)    net = backprop_network.Network([784, 40, 10])    net.SGD(training_data, epochs=30, mini_batch_size=10, learning_rate=0.1, test_data=test_data)if __name__ == "__main__":    section_b()    section_c()